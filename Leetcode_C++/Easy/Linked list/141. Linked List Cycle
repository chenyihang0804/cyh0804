//link: https://leetcode.com/problems/linked-list-cycle/

Solution:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *slow = head, *fast = head;
        while (fast && fast->next) {
            slow = slow->next;
            fast = fast->next->next;
            if (slow = fast) {
                return true;
            }
        }
        return false;
    }
};

//快慢指针，慢指针一次走一步，快指针一次走两步，如果能相遇说明有环
