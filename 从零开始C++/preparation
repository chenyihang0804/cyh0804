1. tcp三次握手发生在listen、connect、accept哪个阶段？
accept发生在三次握手之后。设计原理主要是防止DDOS攻击。DDOS攻击主要是因为，accept是用来分配资源的，当客户端跟服务端进行连接，发送syn，服务端收到
之后缺不再理会客户端的请求，这个时候如果有非常多的用户进行连接，比如10000个，此时就会造成在服务端所有资源都用accept分配了，这个就是DDOS攻击。

2. 最长连续公共子串，比如abcdefgh和ghdefgcc输出defg。
动态规划，注意区别最长连续公共子串和最长公共子序列的区别。(dp[i][j]表示 LCS 的长度)
最长公共子序列的状态转移方程为：
假设当input1[i-1] == input2[j-1]时，dp[i][j]=max(dp[i-1][j-1]+1,max(dp[i-1][j],T[i][j-1]))。
当input1[i-1] != input2[j-1]时，dp[i][j] = max(dp[i-1][j],T[i][j-1])。(取它上方或左边的较大值)

最长公共子串的状态转移方程为：
当input1[i] == input2[j]时，dp[i][j]=dp[i-1][j-1]+1。
当input1[i] != input2[j]时，dp[i][j] = 0。

3. 集合的所有子集
可以用三种解法，以[1,2,3]为例子
第一种：非递归解法，（比递归简单些），先给数组排序，然后按照一位一位的往上叠加，比如一开始是空集，那么先在空集上加1，就变成了[],和[1];接下来在之前的子
集上每个都加2，可以得到[2],[1,2],现在所有子集为[],[1],[2],[1,2]，同理处理3。

第二种：DFS深度优先搜索。因为每个数字只有两种状态，要么被选择，要么不被选择，那么可以构造出一棵二叉树，左子树表示选择这一层处理的节点，右子树表示不选择，
最终的叶节点就是所有子集合。

第三种：位运算解法。1表示对应数字被选中，0表示没有选中。
