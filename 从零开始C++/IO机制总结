1. 同步、异步、阻塞、非阻塞
1）同步、异步是针对消息通知机制进行区别的，比如：银行排队等候，排队等候就是同步，取号排队等叫号就是异步；
2）阻塞、非阻塞是根据线程等待消息通知的状态来进行区别的，比如：排队等候的时候如果什么事情都不干，就是阻塞，如果边打电话边等候就是非阻塞。
3）同步阻塞的效率最低，如果把fd中标志位设置为O_NONBLOCK，就变成了同步非阻塞；
4）阻塞、非阻塞和同步、异步无关；

2. 五个概念
1）用户空间和内核空间：现在操作系统都采用虚拟存储器，对于32位操作系统，虚拟储存空间（寻址空间）为4G（2的32次方），操作系统的核心是内核，可以访问受保护的
内存空间，同时也能访问底层硬件设备的所有权限。为了保证用户进程不能直接操作内核，保证内核安全，操作系统将虚拟存储空间划分为两个部分：用户空间和内核空间；
对Linux来说，用户空间为3G（低位），内核空间为1G（高位）；
2）进程切换：挂起当前进程，恢复之前挂起的进程。
3）进程阻塞：获取系统资源失败、等待某种操作完成、新数据尚未到达或没有新工作时，系统会自动执行阻塞，所以可以看出进程的阻塞是进程自身主动的一种行为，只有处
于运行状态的进程才会转为阻塞状态。阻塞的进程是不占CPU的。
4）文件描述符fd；
5）缓存IO：又被成为标准IO；在Linux中，操作系统会将IO的数据缓存在文件系统的页缓存中，也就是说，数据会被先拷贝到操作系统的内核的缓冲区中，然后才会从缓冲
区中拷贝到应用程序的地址空间中。但是数据拷贝带来的CPU以及内存开销很大。

3. Linux下五种IO模型：
网络IO的本质是socket的读取，socket在Linux系统下被抽象为流，IO可以理解为对流的操作；
1）同步阻塞IO（blocking IO）：
在Linux下，默认所有socket都是同步阻塞的；特点：在IO的执行的两个阶段都被block了；优点：能够及时返回数据，无延迟。对内核开发者来说比较省事；缺点：牺牲
性能；
2）同步非阻塞IO（nonblocking IO）：
使用轮询的方式，当用户发出read操作时，如果内核数据还没准备好，不会block用户进程，而是立即返回一个error；一直到准备好之后，又收到了用户的system call，
这时就会把数据从缓冲区拷贝到用户空间。特点：需要不断主动询问内核数据是否准备完毕；优点：可以在等待的时间完成其他任务；缺点：任务完成响应延迟增大，因为是
隔段时间才会进行一次轮询；
3）IO多路复用：就是轮询多个socket
循环查询多个任务状态，只要有一个任务完成，就去处理它。三种监视方式：select、poll、epoll；
select调用：内核级别，可以同时监听多个IO端口，当其中任何一个socket数据准备好了之后，就返回可读。然后进程调用recvfrom，把内核数据拷贝到用户空间，这
个过程是阻塞的；
select、epoll对处理多个连接有优势。
IO多路复用是阻塞在select、poll、epoll这种系统调用上，而不是阻塞在真正的IO调用比如recvform上；
IO多路复用把多个IO的阻塞复用到一个select的阻塞上，从而使得单线程情况下可以处理多客户端的请求。系统开销小，无需创建额外的进程或者线程；
高并发的程序主要使用同步非阻塞，而不是多线程+同步阻塞；在高并发的情况下，为每一个任务创建一个进程或线程的开销非常大，同步非阻塞的方式就可以把多个IO请求
扔到后台，在一个进程里服务大量的并发IO请求；
4）信号驱动IO：首先允许socket使用信号驱动IO；安装一个信号处理函数，此时进程继续执行，如果内核数据准备好了之后，会受到一个sigo信号，然后在信号函数里
调用IO操作函数；
5）异步非阻塞IO（asynchorous IO）：
异步IO不是顺序执行的；用户进程进行aio_read系统调用之后，无论内核数据是否准备好了，都会直接返回给用户进程，然后用户进程可以做别的任务；等socket内核
数据准备好了，从内核发消息给用户进程，在Linux中，通知方式是信号，拷贝内核数据到用户空间；这两个IO阶段都是非阻塞的；

4. 具体聊聊IO多路复用下的select、poll、epoll机制的区别
1）支持一个进程里能打开的最大连接数：select：1024（32位系统），2048（64位系统）；poll：没有最大限制，因为是基于链表来存储的；epoll：有最大限制，
但是上限很大，1G内存机器上可以打开10w左右的连接；
2）FD剧增后带来的效率问题：select和poll每次都要进行线性遍历，随着FD的增加会造成遍历速度变慢，性能下降；epoll：内核中的实现是根据每个callback函数
来实现的，只有活跃的socket才会调用callback，如果活跃数很少的话，没有性能问题，但是如果活跃数增加的话，也会出现一些问题；
3）消息传递方式：select和poll都需要将内核消息传递到用户空间，需要进行内核拷贝；epoll：通过内核和用户空间共享一块内存来实现；
